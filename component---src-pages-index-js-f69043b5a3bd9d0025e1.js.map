{"version":3,"sources":["webpack:///./src/components/codeblock.js","webpack:///./src/pages/index.js"],"names":["Block","props","compute","toReturn","types","returnType","DEFAULT_DATA","TODO","state","input","console","log","onInputChange","event","target","value","setState","inputToUse","DATA_TYPES","BOOLEAN","onChange","type","render","this","React","Component","Codeblock","DEFAULT_RETURN_TYPE","DEFAULT_FUNCTION","IS_ANY","funcname","hasOwnProperty","ANY","selectedFunc","params","computed_params","refs","map","x","current","func_to_use","result","dispatch","addElement","changeType","changeFunc","createRef","ref","func","PARAMS","PARAM_TYPES","i","refToUse","push","inputType","name","handleTypeChange","handleFuncChange","handleNameChange","Object","keys","given_name","var_name","return_type","filter","funcs","selected","style","marginLeft","onClick","connect","app","elements","Animation","tags","border","width","height","isDarkMode","blocks","title","keywords","background","color","toggleDarkMode","addBlock","to"],"mappings":"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","file":"component---src-pages-index-js-f69043b5a3bd9d0025e1.js","sourcesContent":["import PropTypes, { func } from \"prop-types\"\nimport React from \"react\"\nimport { DATA_TYPES, DEFAULT_DATA } from \"../state/app\"\n\nimport { connect } from \"react-redux\"\nimport { addElement, toggleDarkMode, addBlock } from \"../state/app\"\n\nclass Block extends React.Component {\n  constructor(props) {\n    super(props);\n    var inputToUse = (this.props.returnType === DATA_TYPES.BOOLEAN) ?\n      (<input onChange={this.onInputChange} type=\"checkbox\" value={\"true\"}/>) :\n      <input onChange={this.onInputChange} type={this.props.returnType} />\n    this.state = {\n      input: inputToUse\n    }\n  }\n\n  compute = () => {\n    // console.log(\"BLOCK TYPES\", this.props.types)\n    let func_to_use = this.props.types[this.props.returnType][DEFAULT_DATA]\n    // console.log(\"FUNC TO USE\", func_to_use)\n    let toReturn = func_to_use.TODO(this.state.input)\n    console.log(\"CALLED FROM BLOCK - RETURNING\", toReturn)\n    return toReturn\n  }\n\n  onInputChange = (event) => {\n    const target = event.target\n    const value = target.value\n    console.log(\"TYPE CHANGED\", target, value);\n    this.setState({ input: target })\n  }\n\n  // FIX THIS SHIT LMAOOOOO\n  render() {\n    return (this.props.returnType === DATA_TYPES.BOOLEAN) ?\n      (<span><input onChange={this.onInputChange} type=\"checkbox\" value={\"true\"}/> True</span>) :\n      <input onChange={this.onInputChange} type={this.props.returnType} />\n  }\n}\n\nclass Codeblock extends React.Component {\n  DEFAULT_RETURN_TYPE = \"CHOOSE RETURN TYPE\";\n  DEFAULT_FUNCTION = \"CHOOSE A FUNCTION\";\n\n  // Is the function an ANY return type or is it a specific return type?\n  // Return the right function to use and avoid a key error\n  IS_ANY = (funcname) =>\n    (this.state.types[this.state.returnType].hasOwnProperty(funcname)) ?\n      this.state.types[this.state.returnType][funcname] :\n      this.state.types[DATA_TYPES.ANY][funcname];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      types: props.types,\n      returnType: props.inputType,\n      selectedFunc: null,\n      params: null\n    };\n    console.log(\"CONSTRUCTOR STATE\", this.state)\n  }\n\n  compute = () => {\n    let toReturn = null\n    console.log(\"EXPECTED RETURN TYPE\", this.IS_ANY(this.state.selectedFunc))\n    console.log(\"PARAMS\", this.state.params)\n    let computed_params = this.state.refs.map(x => x.current.compute());\n    console.log(\"COMPUTED PARAMS\", computed_params)\n    if(this.state.selectedFunc === DEFAULT_DATA) {\n      console.log(\"RETURNING\", computed_params[0])\n      return computed_params[0]\n    }\n\n    let func_to_use = this.IS_ANY(this.state.selectedFunc)\n    console.log(\"FUNC TO USE\", this.state.selectedFunc, func_to_use)\n    let result = func_to_use.TODO(...computed_params)\n    console.log(\"RESULT\", result)\n    this.props.dispatch(addElement(result))\n    return result\n    // console.log(\"COMPUTED PARAMS\", this.state.params.map(x => x.type))\n    // console.log(\"COMPUTED PARAMS\", this.state.params.map(x => x.compute()))\n  }\n\n  changeType = value => {\n    this.setState({\n      returnType: value,\n      selectedFunc: null,\n      params: null\n    })\n  }\n\n  changeFunc = value => {\n    var params = null;\n    var refs = []\n    if(value != null) {\n      if(value === DEFAULT_DATA) {\n        // params = (this.state.returnType === DATA_TYPES.BOOLEAN) ? (<span><input type=\"checkbox\" value={\"true\"}/> True</span>) : <input type={this.state.returnType} />\n        refs = React.createRef()\n        params = <Block ref={refs} types={this.state.types} returnType={this.state.returnType} />\n        params = [params]\n        refs = [refs]\n      }\n      else {\n        // Func might be under ANY or under actual return type\n        var func = this.IS_ANY(value);\n        params = func.PARAMS;\n        var types = func.PARAM_TYPES.map(x => (x === DATA_TYPES.ANY) ? this.state.returnType : x)\n        console.log(\"REQUIRED PARAMS\", params)\n        console.log(\"TYPES\", types)\n        // params -> [[TYPE, PARAM], [TYPE, PARAM] ...]\n\n        params = params.map((x, i) => [types[i], x]).map(x => {\n          var refToUse = React.createRef()\n          refs.push(refToUse)\n          return(<Codeblock inputType={x[0]}\n                     ref={refToUse}\n                     dispatch={this.props.dispatch}\n                     name={x[1]}\n                     types={this.state.types}/>)\n        });\n        // params = params\n        console.log(\"PARAMS\", params)\n      }\n    }\n    this.setState({\n      selectedFunc: value,\n      params: params,\n      refs: refs\n    })\n  }\n\n  handleTypeChange = event => {\n    const target = event.target\n    const value = target.value\n    console.log(\"TYPE CHANGED\", target, value);\n    this.changeType(value)\n  }\n\n  handleFuncChange = event => {\n    const target = event.target\n    const value = target.value\n    console.log(\"FUNC CHANGED\", target, value)\n    this.changeFunc(value);\n  }\n\n  handleNameChange = event => {\n    const target = event.target\n    const value = target.value\n    console.log(\"NAME CHANGED\", value)\n    this.setState({\n      name: value\n    })\n  }\n\n  render() {\n    console.log(\"WHERE ARE MY PARAMS\", this.state.params)\n    console.log(\"CURRENT STATE\", this.state)\n    var types = Object.keys(this.state.types)\n    console.log(\"INPUT TYPE\", this.props.inputType)\n\n    var given_name = this.props.name;\n    var var_name = <span>{given_name}</span>\n    if(given_name == null) {\n      var_name = <input type=\"text\" onChange={this.handleNameChange} />\n    }\n\n    // If input type is fixed, display input type, else display options\n    var return_type = (this.props.inputType == null) ?\n      (<select onChange={this.handleTypeChange}>\n        {(this.state.returnType == null) ? (<option>{this.DEFAULT_RETURN_TYPE}</option>) : null}\n        {types.filter(x => x !== DATA_TYPES.ANY).map(x =>\n          <option>{x}</option>\n        )}\n      </select>) : <span>{this.props.inputType} </span>\n\n    var funcs = null;\n    if(this.state.returnType != null) {\n      var toReturn = this.state.returnType\n      console.log(\"FUNCS\", this.state.types[toReturn])\n      funcs = (<select onChange={this.handleFuncChange}>\n        {(this.state.selectedFunc == null) ? (<option selected>{this.DEFAULT_FUNCTION}</option>) : null}\n        {Object.keys(this.state.types[toReturn]).map(x => <option>{x}</option>)}\n        {Object.keys(this.state.types[DATA_TYPES.ANY]).map(x => <option>{x}</option>)}\n      </select>)\n    }\n\n    var params = this.state.params\n\n    return (<div>\n      {var_name}\n      <span> is a </span>\n      {return_type}\n      {(funcs == null) ? null : <span> defined by </span>}\n      {funcs}\n      {(params == null || this.state.selectedFunc === DEFAULT_DATA) ? null : <span> where </span>}\n      <div style={{marginLeft: \"50px\"}}>{params}</div>\n      <button onClick={this.compute}>Compute</button>\n      <br />\n    </div>)\n  }\n}\n\nexport default connect(state => ({\n  types: state.app.funcs,\n  elements: state.app.elements\n}), null)(Codeblock)","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { connect } from 'react-redux';\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Codeblock, {Block} from \"../components/codeblock\"\nimport { DATA_TYPES } from '../state/app'\n\nimport { addElement, toggleDarkMode, addBlock } from \"../state/app\"\n\nconst Animation = ({tags}) => {\n  return(\n    <svg style={{border: \"2px solid black\", width: \"100%\", height: \"500px\"}}>\n      {tags}\n    </svg>\n  )\n}\n\nconst IndexPage = ({isDarkMode, elements, funcs, blocks, dispatch}) => {\n  console.log(elements);\n  console.log(\"DATA TYPES\", DATA_TYPES)\n  return (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div>\n      <Animation tags={elements} />\n    </div>\n    <button\n      style={isDarkMode ? { background: 'black', color: 'white' } : null}\n      onClick={() => dispatch(toggleDarkMode(!isDarkMode))}>Dark mode {isDarkMode ? 'on' : 'off'}\n    </button>\n    {/*<button*/}\n    {/*  style={isDarkMode ? { background: 'black', color: 'white' } : null}*/}\n    {/*  onClick={() => dispatch(addElement(<circle cx={\"40\"} cy={\"40\"} r={\"80\"} fill={\"red\"}></circle>))}>Add Element*/}\n    {/*</button>*/}\n    <button\n      style={isDarkMode ? { background: 'black', color: 'white' } : null}\n      onClick={() => dispatch(addBlock(<Codeblock inputType={null} name={null} />))}>Add Function\n    </button>\n    <br />\n    <br />\n    <div>\n      { blocks }\n    </div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)}\n\nexport default connect(state => ({\n  isDarkMode: state.app.isDarkMode,\n  elements: state.app.elements,\n  funcs: state.app.funcs,\n  blocks: state.app.blocks\n}), null)(IndexPage)"],"sourceRoot":""}